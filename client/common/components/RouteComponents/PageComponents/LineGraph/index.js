import React, { Component } from "react";
import PropTypes from "prop-types";

import { bindActionCreators } from "redux";
import { connect } from "react-redux";

import moment from "moment";
import {
    Button, MenuItem, Position, Classes, Intent,
} from "@blueprintjs/core";
import { MultiSelect, Select } from "@blueprintjs/select";
import { DateTime } from "luxon";
import Spinner from "../../../UIComponents/Spinner";
import ChartWrapper from "../../../../../../utils/reactChartWrapper";
import Search from "../../SharedComponents/Entities/Search";
import Input from "../../../UIComponents/Input";

class Daily extends Component {
    constructor(props) {
        super(props);
        this.chartHandle = this.chartHandle.bind(this);
    }

    componentDidMount() {
        // fetch data

    }

    componentWillMount() {
        this.setState({
            selectedLegend: [],
            selectedOrganizations: [],
            dataItems: [],
            updated: false,
            legendItems: [{
                datasetIndex: 0,
                fillStyle: "#b16037",
                hidden: false,
                lineCap: "",
                lineDash: "",
                lineDashOffset: "",
                lineJoin: "",
                lineWidth: 1,
                pointStyle: "",
                strokeStyle: "#b16037",
                text: "Organization1 Score3",
            }],
        });
    }

    buildLists(legend, organizations, list) {
        organizations.map((i) => {
            const { name } = i;
            list.push({
                title: name,
                display: name,
                color: "",
                value: "",
                hidden: false,
            });
            return list;
        });
    }

    handleToggleFullLegend() {
        const newLegend = !this.state.showLegend;
        this.state.chartInstance.options.legend.display = !this.state.chartInstance.options.legend.display;
        /* this.setState({
            showLegend: newLegend,
        });*/

        return this.state.chartInstance.update();
    }

    handleLegendClear(e, dataset) {
        const value = e;
        const tagValue = value.props.children;
        const newLegend = this.state.selectedOrganizations;
        this.state.selectedOrganizations.map((i) => {
            /* for(let x = 0; this.state.selectedLegend.length-1; x++) {
                 const selector = `${tagValue} ${this.state.selectedLegend[x].title}`;
                 const selected = dataset.filter(i => (i.label === selector))
                     .map((i) => {
                         i.hidden = true;
                     });
             }*/
            this.state.selectedLegend.forEach((item, x) => {
                const selector = `${tagValue} ${item.title}`;
                const selected = dataset.filter(i => (i.label === selector)).map((i) => {
                    i.hidden = true;
                });
            });
            const indexOfLegendToDelete = newLegend.map(x => x.title)
                .indexOf(tagValue);
            newLegend.splice(indexOfLegendToDelete, 1);

            return this.state.chartInstance.update();
        });
    }

    handleDataSetClear(e, dataset) {
        const value = e;
        const tagValue = value.props.children;
        const newLegend = this.state.selectedLegend;
        const indexOfLegendToDelete = newLegend.map(x => x.title)
            .indexOf(tagValue);
        newLegend.splice(indexOfLegendToDelete, 1);
        this.state.selectedOrganizations.map((i) => {
            const selector = `${i.title} ${tagValue}`;
            const selected = dataset.filter(i => (i.label === selector)).map((i) => {
                i.hidden = true;
            });
        });
        return this.state.chartInstance.update();
    }

    handleLegendChange(e, dataset) {
        const value = e;
        if(value.title === "Show All") {
            for(let i = 0; i < this.state.legendItems.length; i++) {
                this.state.chartInstance.getDatasetMeta(i).hidden = false;
            }
            return this.state.chartInstance.update();
        }
        if(value.title === "Hide All") {
            for(let i = 0; i < this.state.legendItems.length; i++) {
                this.state.chartInstance.getDatasetMeta(i).hidden = true;
            }
            this.state.selectedOrganizations.length = 0;
            return this.state.chartInstance.update();
        }
        const newLegend = this.state.selectedOrganizations;
        const legend = {
            value: value.title,
            title: value.title,
            color: "#bcde00",
        };
        if(!newLegend.map(i => i.title)
            .includes(legend.title)) {
            newLegend.push(legend);
        }
        const stateSelectedLegendReference = this.state.selectedLegend;
        // todo fix
        if(this.state.selectedLegend.length >= 1) {
            this.state.selectedOrganizations.map((i) => {
                this.state.selectedLegend.forEach((item, x) => {
                    const selector = `${i.title} ${item.title}`;
                    const selected = dataset.filter(i => (i.label === selector)).map((i) => {
                        /*  if(!newLegend.map(i => i.title).includes(legend.title)) {*/
                        i.hidden = false;
                    });
                });
            });
            this.state.chartInstance.update();
        } else {

        }
    }

    handleLegendChange2(e, dataset) {
        const value = e;
        if(value.title === "Show All") {
            for(let i = 0; i < this.state.dataItems.length; i++) {
                this.state.chartInstance.getDatasetMeta(i).hidden = false;
            }
            return this.state.chartInstance.update();
        }
        if(value.title === "Hide All") {
            for(let i = 0; i < this.state.dataItems.length; i++) {
                this.state.chartInstance.getDatasetMeta(i).hidden = true;
            }
            this.state.dataItems.length = 0;
            return this.state.chartInstance.update();
        }
        const newLegend = this.state.selectedLegend;
        if(!newLegend.map(i => i.title)
            .includes(value.title)) {
            newLegend.push({
                value: value.title,
                title: value.title,
                color: "#bcde00",
            });
        }

        this.state.selectedOrganizations.map((i) => {
            // newLegend.length=0;
            const selector = `${i.title} ${value.title}`;
            const selected = dataset.filter(i => (i.label === selector)).map((i) => {
                const legend = {
                    value: value.title,
                    title: value.title,
                    index: i._meta[0].index,
                    color: this.state.chartInstance.getDatasetMeta(i._meta[0].index).dataset._view.backgroundColor,
                };
                i.hidden = false;
            });
        });

        this.state.chartInstance.update();
    }

    chartHandle(chart) {
        const chartInstanceHandle = chart;
        this.setState({
            chartInstance: chartInstanceHandle,
            legendItems: chartInstanceHandle.legend.legendItems,
        });
        this.forceUpdate();
    }

    static renderClass() {
        return (temp, { handleClick, modifiers, query }) => {
            if(!modifiers.matchesPredicate) {
                return null;
            }
            return (
                <div>
                    <MenuItem
                        className={Classes.POPOVER_DISMISS_OVERRIDE}
                        active={false}
                        key={temp.value}
                        onClick={handleClick}
                        text={Search.highlightText(temp.title, query)}
                    />
                </div>
            );
        };
    }

    static renderTag() {
        return (temp, { handleClick, modifiers, query }) => (
            temp.value
        );
    }

    renderDate(date) {
        const mom = moment(date, "LL").locale("en").startOf("month").toDate();
        const mom2 = moment(date, "LL").locale("en").startOf("month").add(1, "week")
            .toDate();
        const mom3 = moment(date, "LL").locale("en").startOf("month").add(2, "week")
            .toDate();
        const mom4 = moment(date, "LL").locale("en").startOf("month").add(3, "week")
            .toDate();
        return {
            mom, mom2, mom3, mom4,
        };
    }

    handleDirect(organizationId) {
        /*       const {updateDate,changeOrganization,updateRouteFilter} = this.props;
        updateDate([this.props.day.day, this.props.day.day]);
        changeOrganization(organizationId);
        updateRouteFilter({ title: "All Routes", value: "all" });
        this.context.router.replace("/manager/routes");*/
    }

    handleAxisClick(index) {
        const org = this.props.network.organizations.data[index];
        this.props.changeOrganization(org.organizationId);// change to root
        this.props.updateRouteFilter({ title: "Non Compliant", value: "non-compliant" });
        const start = moment({}).subtract(30, "days").toDate();
        const end = moment({}).endOf("day").toDate();
        this.props.updateDate([start, end]);
        this.context.router.replace("/manager/routes");
    }

    handleClear() {
        this.setState({ selectedLegend: [] });
    }

    render() {
        /* const clearButton =
            this.state.selectedLegend.length > 0 ? <Button icon="cross" minimal={true} onClick={this.handleClear} /> : undefined;*/
        const shortTermChartColorStorage = [
            "#efd8ff",
        ];
        if(true) {
            // todo make a cool chart label selector thing
            /* {label: `${i.name} Fresh Temp`,
             backgroundColor: color2,
             borderColor: color2,
             borderWidth: 1,
             hoverBackgroundColor: color2,
             hoverBorderColor: color2,
             fill: false,
             showLine: true,
             hidden:true,
             data: i.day.freshCompliance,
             },*/
            const testData = {
                data: [{
                    organizationId: "3c2e46d7-f9f3-4dd9-8f54-6b32325c051f",
                    name: "Example Dataset 1",
                    day: {
                        resultArrayTotal: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayNonCompliant: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayNonCompliantFrozen: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayNonCompliantFresh: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayUncovered: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArray: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 100 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], score: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], threatCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], frozenScore: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], freshScore: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], conversionRate: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], freshCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 100 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], frozenCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 100 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], routeCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 100 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], totalScores: 0, nonCompliantRoutesThisMonth: 0, organizationId: "3c2e46d7-f9f3-4dd9-8f54-6b32325c051f", name: "Example Dataset 1",
                    },
                }, {
                    organizationId: "1727c3f6-a781-4130-853a-140013b71af1",
                    name: "Example Dataset 2",
                    day: {
                        resultArrayTotal: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 2 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 6 }, { x: "2019-08-07T11:59:59.999Z", y: 7 }, { x: "2019-08-08T11:59:59.999Z", y: 5 }, { x: "2019-08-09T11:59:59.999Z", y: 5 }, { x: "2019-08-10T11:59:59.999Z", y: 5 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 1 }, { x: "2019-08-13T11:59:59.999Z", y: 4 }, { x: "2019-08-14T11:59:59.999Z", y: 5 }, { x: "2019-08-15T11:59:59.999Z", y: 5 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 1 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 1 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayNonCompliant: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 1 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 5 }, { x: "2019-08-07T11:59:59.999Z", y: 7 }, { x: "2019-08-08T11:59:59.999Z", y: 3 }, { x: "2019-08-09T11:59:59.999Z", y: 5 }, { x: "2019-08-10T11:59:59.999Z", y: 5 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 4 }, { x: "2019-08-14T11:59:59.999Z", y: 5 }, { x: "2019-08-15T11:59:59.999Z", y: 1 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 1 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 1 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayNonCompliantFrozen: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 1 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 1 }, { x: "2019-08-07T11:59:59.999Z", y: 2 }, { x: "2019-08-08T11:59:59.999Z", y: 1 }, { x: "2019-08-09T11:59:59.999Z", y: 3 }, { x: "2019-08-10T11:59:59.999Z", y: 3 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 1 }, { x: "2019-08-14T11:59:59.999Z", y: 3 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayNonCompliantFresh: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 1 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 4 }, { x: "2019-08-07T11:59:59.999Z", y: 7 }, { x: "2019-08-08T11:59:59.999Z", y: 3 }, { x: "2019-08-09T11:59:59.999Z", y: 5 }, { x: "2019-08-10T11:59:59.999Z", y: 5 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 4 }, { x: "2019-08-14T11:59:59.999Z", y: 4 }, { x: "2019-08-15T11:59:59.999Z", y: 1 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayUncovered: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 1 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArray: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 50 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 16.67 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 40 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 80 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], score: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], threatCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], frozenScore: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], freshScore: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], conversionRate: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 80 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], freshCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 50 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 33.33 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 40 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 20 }, { x: "2019-08-15T11:59:59.999Z", y: 80 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], frozenCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 50 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 83.33 }, { x: "2019-08-07T11:59:59.999Z", y: 71.43 }, { x: "2019-08-08T11:59:59.999Z", y: 80 }, { x: "2019-08-09T11:59:59.999Z", y: 40 }, { x: "2019-08-10T11:59:59.999Z", y: 40 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 75 }, { x: "2019-08-14T11:59:59.999Z", y: 40 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], routeCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 80 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], totalScores: 50, nonCompliantRoutesThisMonth: 41, organizationId: "1727c3f6-a781-4130-853a-140013b71af1", name: "Example Dataset 2",
                    },
                }, {
                    organizationId: "4f0fb2d8-efaf-4f3f-86c6-923923599513",
                    name: "Example Dataset 3",
                    day: {
                        resultArrayTotal: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayNonCompliant: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayNonCompliantFrozen: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayNonCompliantFresh: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayUncovered: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArray: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 100 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], score: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], threatCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], frozenScore: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], freshScore: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], conversionRate: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], freshCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 100 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], frozenCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 100 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], routeCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 100 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], totalScores: 0, nonCompliantRoutesThisMonth: 0, organizationId: "4f0fb2d8-efaf-4f3f-86c6-923923599513", name: "Example Dataset 3",
                    },
                }, {
                    organizationId: "53b4909b-0bab-41dd-86cc-f1612c7d1306",
                    name: "DPI Indianapolis",
                    day: {
                        resultArrayTotal: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayNonCompliant: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayNonCompliantFrozen: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayNonCompliantFresh: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArrayUncovered: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], resultArray: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 100 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], score: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], threatCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], frozenScore: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], freshScore: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], conversionRate: [{ x: "2019-08-01T11:59:59.999Z", y: 0 }, { x: "2019-08-02T11:59:59.999Z", y: 0 }, { x: "2019-08-03T11:59:59.999Z", y: 0 }, { x: "2019-08-04T11:59:59.999Z", y: 0 }, { x: "2019-08-05T11:59:59.999Z", y: 0 }, { x: "2019-08-06T11:59:59.999Z", y: 0 }, { x: "2019-08-07T11:59:59.999Z", y: 0 }, { x: "2019-08-08T11:59:59.999Z", y: 0 }, { x: "2019-08-09T11:59:59.999Z", y: 0 }, { x: "2019-08-10T11:59:59.999Z", y: 0 }, { x: "2019-08-11T11:59:59.999Z", y: 0 }, { x: "2019-08-12T11:59:59.999Z", y: 0 }, { x: "2019-08-13T11:59:59.999Z", y: 0 }, { x: "2019-08-14T11:59:59.999Z", y: 0 }, { x: "2019-08-15T11:59:59.999Z", y: 0 }, { x: "2019-08-16T11:59:59.999Z", y: 0 }, { x: "2019-08-17T11:59:59.999Z", y: 0 }, { x: "2019-08-18T11:59:59.999Z", y: 0 }, { x: "2019-08-19T11:59:59.999Z", y: 0 }, { x: "2019-08-20T11:59:59.999Z", y: 0 }, { x: "2019-08-21T11:59:59.999Z", y: 0 }, { x: "2019-08-22T11:59:59.999Z", y: 0 }, { x: "2019-08-23T11:59:59.999Z", y: 0 }, { x: "2019-08-24T11:59:59.999Z", y: 0 }, { x: "2019-08-25T11:59:59.999Z", y: 0 }, { x: "2019-08-26T11:59:59.999Z", y: 0 }, { x: "2019-08-27T11:59:59.999Z", y: 0 }, { x: "2019-08-28T11:59:59.999Z", y: 0 }, { x: "2019-08-29T11:59:59.999Z", y: 0 }, { x: "2019-08-30T11:59:59.999Z", y: 0 }, { x: "2019-08-31T11:59:59.999Z", y: 0 }], freshCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 100 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], frozenCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 100 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], routeCompliance: [{ x: "2019-08-01T11:59:59.999Z", y: 100 }, { x: "2019-08-02T11:59:59.999Z", y: 100 }, { x: "2019-08-03T11:59:59.999Z", y: 100 }, { x: "2019-08-04T11:59:59.999Z", y: 100 }, { x: "2019-08-05T11:59:59.999Z", y: 100 }, { x: "2019-08-06T11:59:59.999Z", y: 100 }, { x: "2019-08-07T11:59:59.999Z", y: 100 }, { x: "2019-08-08T11:59:59.999Z", y: 100 }, { x: "2019-08-09T11:59:59.999Z", y: 100 }, { x: "2019-08-10T11:59:59.999Z", y: 100 }, { x: "2019-08-11T11:59:59.999Z", y: 100 }, { x: "2019-08-12T11:59:59.999Z", y: 100 }, { x: "2019-08-13T11:59:59.999Z", y: 100 }, { x: "2019-08-14T11:59:59.999Z", y: 100 }, { x: "2019-08-15T11:59:59.999Z", y: 100 }, { x: "2019-08-16T11:59:59.999Z", y: 100 }, { x: "2019-08-17T11:59:59.999Z", y: 100 }, { x: "2019-08-18T11:59:59.999Z", y: 100 }, { x: "2019-08-19T11:59:59.999Z", y: 100 }, { x: "2019-08-20T11:59:59.999Z", y: 100 }, { x: "2019-08-21T11:59:59.999Z", y: 100 }, { x: "2019-08-22T11:59:59.999Z", y: 100 }, { x: "2019-08-23T11:59:59.999Z", y: 100 }, { x: "2019-08-24T11:59:59.999Z", y: 100 }, { x: "2019-08-25T11:59:59.999Z", y: 100 }, { x: "2019-08-26T11:59:59.999Z", y: 100 }, { x: "2019-08-27T11:59:59.999Z", y: 100 }, { x: "2019-08-28T11:59:59.999Z", y: 100 }, { x: "2019-08-29T11:59:59.999Z", y: 100 }, { x: "2019-08-30T11:59:59.999Z", y: 100 }, { x: "2019-08-31T11:59:59.999Z", y: 100 }], totalScores: 0, nonCompliantRoutesThisMonth: 0, organizationId: "53b4909b-0bab-41dd-86cc-f1612c7d1306", name: "DPI Indianapolis",
                    },
                }],
                date: "2020-02-29T22:04:43.767-10:00",
            };
            const fresh = testData.data.map(i => (i.day.resultArray));
            /*                const frozen = this.props.analytics.networkScore6.data.data.map(i => (i.day.frozen));*/
            const chartLabels = testData.data.map(i => (i.name));
            const dataset2 = [];
            const list = [{
                title: "Show All",
                value: null,
            }, {
                title: "Hide All",
                value: null,
            },
            ];
            const list2 = [
                {
                    title: "Score1",
                    value: null,
                },
                {
                    title: "Score2",
                    value: null,
                },
                {
                    title: "Score3",
                    value: null,
                },
                {
                    title: "Score4",
                    value: null,
                },
                {
                    title: "Score5",
                    value: null,
                },
                {
                    title: "Score6",
                    value: null,
                },
                {
                    title: "Routes",
                    value: null,
                },
                {
                    title: "Score8",
                    value: null,
                },
                {
                    title: "Score9",
                    value: null,
                },
                {
                    title: "ScoreRandom",
                    value: null,
                },

            ];
            this.buildLists(this.state.legendItems, this.props.organizationArray, list);
            const legendList = {
                items: list,
                datasets: list2,
                itemPredicate: Search.filter,
                itemRenderer: Daily.renderClass(),
                tagRenderer: Daily.renderTag(),
            };

            testData.data.map((i, ix) => {
                const randHex = Math.floor(Math.random() * 16777215);
                const color = `#${randHex.toString(16)}`;
                const color2 = `#${Math.floor(randHex - 5000).toString(16)}`;
                const color3 = `#${Math.floor(randHex - 8000).toString(16)}`;
                const color4 = `#${Math.floor(randHex - 10000).toString(16)}`;
                const color5 = `#${Math.floor(randHex - 12000).toString(16)}`;
                const color6 = `#${Math.floor(randHex - 14000).toString(16)}`;
                const color7 = `#${Math.floor(randHex - 16000).toString(16)}`;
                const color8 = `#${Math.floor(randHex - 20000).toString(16)}`;
                const color9 = `#${Math.floor(randHex - 22000).toString(16)}`;
                const isHidden = this.props.settings.selectedOrganizationId !== i.organizationId;
                return (
                    dataset2.push(
                        {
                            label: `${i.name} Score3`,
                            backgroundColor: color,
                            borderColor: color,
                            borderWidth: 1,
                            hoverBackgroundColor: color,
                            hoverBorderColor: color,
                            fill: false,
                            showLine: true,
                            hidden: true,
                            data: i.day.frozenCompliance,
                            nonComp: i.day.resultArrayNonCompliant,
                            nonCompFresh: i.day.resultArrayNonCompliantFresh,
                            nonCompFrozen: i.day.resultArrayNonCompliantFrozen,
                            uncovered: i.day.resultArrayUncovered,
                            total: i.day.resultArrayTotal,
                        },
                        {
                            label: `${i.name} Score2`,
                            backgroundColor: color2,
                            borderColor: color2,
                            borderWidth: 1,
                            hoverBackgroundColor: color2,
                            hoverBorderColor: color2,
                            fill: false,
                            showLine: true,
                            hidden: true,
                            data: i.day.freshCompliance,
                            nonComp: i.day.resultArrayNonCompliant,
                            nonCompFresh: i.day.resultArrayNonCompliantFresh,
                            nonCompFrozen: i.day.resultArrayNonCompliantFrozen,
                            uncovered: i.day.resultArrayUncovered,
                            total: i.day.resultArrayTotal,
                        },

                        {
                            label: `${i.name} Score1`,
                            backgroundColor: color9,
                            borderColor: color9,
                            borderWidth: 1,
                            hoverBackgroundColor: color9,
                            hoverBorderColor: color9,
                            fill: false,
                            showLine: true,
                            hidden: /* isHidden && (ix !== 0)*/true,
                            data: i.day.routeCompliance,
                            nonComp: i.day.resultArrayNonCompliant,
                            nonCompFresh: i.day.resultArrayNonCompliantFresh,
                            nonCompFrozen: i.day.resultArrayNonCompliantFrozen,
                            uncovered: i.day.resultArrayUncovered,
                            total: i.day.resultArrayTotal,
                        },

                        {
                            label: `${i.name} Score4`,
                            backgroundColor: color6,
                            borderColor: color6,
                            borderWidth: 1,
                            hoverBackgroundColor: color6,
                            hoverBorderColor: color6,
                            fill: false,
                            showLine: true,
                            hidden: true,
                            data: i.day.threatCompliance,
                            nonComp: i.day.resultArrayNonCompliant,
                            nonCompFresh: i.day.resultArrayNonCompliantFresh,
                            nonCompFrozen: i.day.resultArrayNonCompliantFrozen,
                            uncovered: i.day.resultArrayUncovered,
                            total: i.day.resultArrayTotal,
                        },
                        {
                            label: `${i.name} Score5`,
                            backgroundColor: color7,
                            borderColor: color7,
                            borderWidth: 1,
                            hoverBackgroundColor: color7,
                            hoverBorderColor: color7,
                            fill: false,
                            showLine: true,
                            hidden: true,
                            data: i.day.resultArray,
                            nonComp: i.day.resultArrayNonCompliant,
                            nonCompFresh: i.day.resultArrayNonCompliantFresh,
                            nonCompFrozen: i.day.resultArrayNonCompliantFrozen,
                            uncovered: i.day.resultArrayUncovered,
                            total: i.day.resultArrayTotal,
                        },
                        {
                            label: `${i.name} Score6`,
                            backgroundColor: color8,
                            borderColor: color8,
                            borderWidth: 1,
                            hoverBackgroundColor: color8,
                            hoverBorderColor: color8,
                            fill: false,
                            showLine: true,
                            hidden: true,
                            data: i.day.score,
                            nonComp: i.day.resultArrayNonCompliant,
                            nonCompFresh: i.day.resultArrayNonCompliantFresh,
                            nonCompFrozen: i.day.resultArrayNonCompliantFrozen,
                            uncovered: i.day.resultArrayUncovered,
                            total: i.day.resultArrayTotal,
                        },
                        {
                            label: `${i.name} Score8`,
                            backgroundColor: color4,
                            borderColor: color4,
                            borderWidth: 1,
                            hoverBackgroundColor: color4,
                            hoverBorderColor: color4,
                            fill: false,
                            showLine: true,
                            hidden: /* isHidden && (ix !== 0)*/true,
                            data: i.day.frozenScore,
                            nonComp: i.day.resultArrayNonCompliant,
                            nonCompFresh: i.day.resultArrayNonCompliantFresh,
                            nonCompFrozen: i.day.resultArrayNonCompliantFrozen,
                            uncovered: i.day.resultArrayUncovered,
                            total: i.day.resultArrayTotal,
                        },
                        {
                            label: `${i.name} Score9`,
                            backgroundColor: color5,
                            borderColor: color5,
                            borderWidth: 1,
                            hoverBackgroundColor: color5,
                            hoverBorderColor: color5,
                            fill: false,
                            showLine: true,
                            hidden: /* isHidden && (ix !== 0)*/true,
                            data: i.day.freshScore,
                            nonComp: i.day.resultArrayNonCompliant,
                            nonCompFresh: i.day.resultArrayNonCompliantFresh,
                            nonCompFrozen: i.day.resultArrayNonCompliantFrozen,
                            uncovered: i.day.resultArrayUncovered,
                            total: i.day.resultArrayTotal,
                        },
                        {
                            label: `${i.name} Routes`,
                            backgroundColor: color4,
                            borderColor: color4,
                            borderWidth: 1,
                            hoverBackgroundColor: color4,
                            hoverBorderColor: color4,
                            fill: false,
                            showLine: true,
                            hidden: true,
                            data: i.day.resultArrayTotal,
                            nonComp: i.day.resultArrayNonCompliant,
                            nonCompFresh: i.day.resultArrayNonCompliantFresh,
                            nonCompFrozen: i.day.resultArrayNonCompliantFrozen,
                            uncovered: i.day.resultArrayUncovered,
                            total: i.day.resultArrayTotal,
                        },
                        {
                            label: `${i.name} ScoreRandom`,
                            backgroundColor: color3,
                            borderColor: color3,
                            borderWidth: 1,
                            hoverBackgroundColor: color3,
                            hoverBorderColor: color3,
                            fill: false,
                            showLine: true,
                            hidden: true,
                            data: i.day.conversionRate,
                            nonComp: i.day.resultArrayNonCompliant,
                            nonCompFresh: i.day.resultArrayNonCompliantFresh,
                            nonCompFrozen: i.day.resultArrayNonCompliantFrozen,
                            uncovered: i.day.resultArrayUncovered,
                            total: i.day.resultArrayTotal,
                        },
                    )
                );

                /* return(
                    {label: i.name,
                        backgroundColor: "#efd8ff",
                        borderColor: "#efd8ff",
                        borderWidth: 1,
                        hoverBackgroundColor: "#efd8ff",
                        hoverBorderColor: "#efd8ff",
                        fill: false,
                        showLine: true,
                        data: i.day.resultArray,
                    })*/
            });
            const chartConfig = {
                labels: /* chartLabels*/[new Date(2019, 6, 1).toISOString(), new Date(2019, 8, 20).toISOString()],
                datasets: dataset2,
            };

            return (
                <section className="support content container">
                    <div className="wrapper">
                        <div className="container">
                            <div style={{ margin: 15 }}>
                                <ChartWrapper
                                    chartHandle={this.chartHandle}
                                    type="line"
                                    data={chartConfig}
                                    options={{
                                        animationTime: 0,
                                        hoverMode: "index",
                                        stacked: false,
                                        legend: {
                                            display: false,
                                            position: "bottom",
                                        /* labels: {
                                            filter(item, chart) {
                                                // Logic to remove a particular legend item goes here
                                                return item.text.includes('TEST 2 Score1');
                                            },
                                        },*/
                                        },
                                        annotation: {
                                            annotations: [

                                            ],
                                        },

                                        tooltips: {
                                            mode: "nearest",
                                            intersect: true,
                                            enabled: true,
                                            callbacks: {
                                                label(tooltipItems, data) {
                                                    const averageDataSetIndex = tooltipItems.datasetIndex;
                                                    return `${data.datasets[tooltipItems.datasetIndex].label}: ${tooltipItems.yLabel}% Scores: ${data.datasets[averageDataSetIndex].total[tooltipItems.index].y} | Incorrect -  Frozen: ${data.datasets[averageDataSetIndex].nonCompFrozen[tooltipItems.index].y}, Chilled: ${data.datasets[averageDataSetIndex].nonCompFresh[tooltipItems.index].y}, Score1: ${data.datasets[averageDataSetIndex].uncovered[tooltipItems.index].y}`;
                                                },
                                            },
                                        },
                                        scales: {

                                            xAxes: [{
                                                type: "time",
                                                time: {
                                                    unit: "day",
                                                    displayFormats: {
                                                        day: "MMM D",
                                                    },
                                                    tooltipFormat: "MMM D",
                                                    display: true,
                                                    ticks: {
                                                        display: true,
                                                        source: "labels",
                                                    },
                                                    scaleLabel: {
                                                        display: true,
                                                    },

                                                },
                                            }],
                                            yAxes: [{
                                                ticks: {
                                                    stepSize: 5,
                                                    suggestedMin: 0,
                                                    suggestedMax: 100,
                                                },
                                                scaleLabel: {
                                                    display: true,
                                                    labelString: "% Grade",
                                                },
                                            }],
                                        },
                                    }
                                    }
                                />
                            </div>
                        </div>
                        <br />
                        <div className="grid grid-1of2 grid-gutters">
                            <div className="grid-cell">
                                <div className="grid grid-center grid-full">
                                    <div className="grid-cell">
                                        <div style={{ marginLeft: 40 }} className="grid-cell input-insulation-type-product-holder">
                                            <Input className="input-filter-profile-class with-addons with-border-radius">
                                                {/* <Select
                                        filterable
                                        hasInitialContent={false}
                                        items={legendList.items}
                                        itemPredicate={legendList.itemPredicate}
                                        itemRenderer={legendList.itemRenderer}
                                        noResults={<MenuItem disabled text="No results." />}
                                        onItemSelect={this.handleLegendChange}
                                        popoverProps={
                                            {
                                                position: Position.BOTTOM,
                                                popoverClassName:Classes.POPOVER_DISMISS_OVERRIDE,
                                                shouldDismissPopover:false,

                                            }
                                        }
                                        inputProps={
                                            {
                                                placeholder: "Filter products",
                                            }
                                        }
                                    >
                                        <Button
                                            rightIcon="caret-down"
                                            text={this.state.selectedLegend.display}
                                        />

                                    </Select>*/}
                                                <div>
                                                    <div style={{ width: 300, float: "left" }}>
                                                        <MultiSelect
                                                            placeholder="Select a Dataset..."
                                                            filterable
                                                            hasInitialContent={false}
                                                            items={legendList.items}
                                                            itemPredicate={legendList.itemPredicate}
                                                            itemRenderer={legendList.itemRenderer}
                                                            tagRenderer={(temp, { handleClick, modifiers, query }) => (
                                                                <span style={{ width: 200, height: 18 }}>
                                                                    {temp.value}
                                                                    {/* <div style={{height:16,width:140,backgroundColor:temp.color}}/>*/}
                                                                </span>
                                                            )}
                                                            noResults={<MenuItem disabled text="No results." />}
                                                            selectedItems={this.state.selectedOrganizations}

                                                            onItemSelect={(e) => { this.handleLegendChange(e, dataset2); }}
                                                            popoverProps={
                                                                {
                                                                    position: Position.TOP,

                                                                    shouldDismissPopover: false,

                                                                }
                                                            }
                                                            tagInputProps={{ tagProps: { style: { width: 200, backgroundColor: "#d4d4d4" } }, onRemove: (e) => { this.handleLegendClear(e, dataset2); } }}
                                                            inputProps={
                                                                {
                                                                    placeholder: "Filter products",
                                                                }
                                                            }
                                                        >
                                                            <Button
                                                                rightIcon="caret-down"
                                                                text={this.state.selectedLegend.display}
                                                            />
                                                        </MultiSelect>
                                                    </div>
                                                    <div style={{ width: 300, float: "right" }}>
                                                        <MultiSelect
                                                            placeholder="Select a Data Set..."
                                                            disabled={this.state.selectedOrganizations.length === 0 || true}
                                                            filterable
                                                            hasInitialContent={false}
                                                            items={legendList.datasets}
                                                            itemPredicate={legendList.itemPredicate}
                                                            itemRenderer={legendList.itemRenderer}
                                                            tagRenderer={(temp, { handleClick, modifiers, query }) => (
                                                                <span style={{ width: 200, height: 18 }}>
                                                                    {temp.value}
                                                                    {/* <div style={{height:16,width:140,backgroundColor:temp.color}}/>*/}
                                                                </span>
                                                            )}
                                                            noResults={<MenuItem disabled text="No results." />}
                                                            selectedItems={this.state.selectedLegend}

                                                            onItemSelect={(e) => { this.handleLegendChange2(e, dataset2); }}
                                                            popoverProps={
                                                                {
                                                                    position: Position.TOP,

                                                                    shouldDismissPopover: false,

                                                                }
                                                            }
                                                            tagInputProps={{ tagProps: { style: { width: 200, backgroundColor: "#d4d4d4" } }, onRemove: (e) => { this.handleDataSetClear(e, dataset2); } }}
                                                            inputProps={
                                                                {
                                                                    placeholder: "Filter products",
                                                                    disabled: this.state.selectedOrganizations.length === 0 || true,
                                                                }
                                                            }
                                                        >
                                                            <Button
                                                                style={{ float: "right" }}
                                                                rightIcon="caret-down"
                                                                disabled={this.state.selectedOrganizations.length === 0 || true}
                                                            />
                                                        </MultiSelect>
                                                    </div>
                                                </div>
                                            </Input>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div className="grid-cell">
                                <div style={{ width: 200 }} className="btn btn-custom btn-custom-full btn-custom-blue" onClick={() => { this.handleToggleFullLegend(); }}>Toggle Full Legend</div>
                            </div>
                        </div>
                        <div className="grid grid-1of2 grid-gutters">
                            <div className="grid-cell">
                                <div className="grid grid-center grid-full" />
                            </div>
                        </div>

                    </div>

                </section>
            );
        }
        return (
            <div style={{ marginTop: 30 }}>
                <Spinner
                    animated
                    content={["Extracting information...",
                        "Generating Chart...", "Aquiring Birthdays...", "Integrating Data Structures...",
                        "Taking Temperatures...", "Inheriting Schematics...", "Rolling up data source...", "Drilling down..."]
                    }
                />
            </div>
        );
    }
}

Daily.propTypes = {};
Daily.contextTypes = {
    router: PropTypes.object.isRequired,
};

function mapStateToProps(state) {
    return {
        lang: state.lang,
        strings: state.strings.strings,
        page: state.page.page,
        organization: state.organization.organization,
        selectedOrganization: state.page.selectedOrganization,
        route: state.route,
        analytics: state.analytics,
        day: state.page,
        date: state.page.date,
        user: state.user,
        settings: state.settings,
        network: state.network,
        showLegend: state.page.showLegend,
        organizationArray: [{
            name: "Example Dataset 1", id: "3c2e46d7-f9f3-4dd9-8f54-6b32325c051f", rootId: "3c2e46d7-f9f3-4dd9-8f54-6b32325c051f", parentId: null,
        },
        {
            name: "Example Dataset 2", id: "1727c3f6-a781-4130-853a-140013b71af1", rootId: "3c2e46d7-f9f3-4dd9-8f54-6b32325c051f", parentId: "3c2e46d7-f9f3-4dd9-8f54-6b32325c051f",
        }, {
            name: "Example Dataset 3", id: "4f0fb2d8-efaf-4f3f-86c6-923923599513", rootId: "3c2e46d7-f9f3-4dd9-8f54-6b32325c051f", parentId: "3c2e46d7-f9f3-4dd9-8f54-6b32325c051f",
        }, {
            name: "DExample Dataset 4", id: "53b4909b-0bab-41dd-86cc-f1612c7d1306", rootId: "3c2e46d7-f9f3-4dd9-8f54-6b32325c051f", parentId: "3c2e46d7-f9f3-4dd9-8f54-6b32325c051f",
        }],

    };
}

function mapDispatchToProps(dispatch) {
    const actions = Object.assign({});
    return bindActionCreators(actions, dispatch);
}

export default connect(mapStateToProps, mapDispatchToProps)(Daily);